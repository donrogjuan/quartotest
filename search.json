[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome to my Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/bruin/index.html",
    "href": "posts/bruin/index.html",
    "title": "Creating posts",
    "section": "",
    "text": "Data Visualization\nHello! We our going to visualize the “palmer penguins” data set. As is common practice, we will use Pandas for storing and manipulating our data in a dataframe and MatPlotLib and Numpy for viualization.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy\n\nNow, we can fetch the data and store it in a Pandas dataframe.\n\nurl = \"https://raw.githubusercontent.com/pic16b-ucla/24W/main/datasets/palmer_penguins.csv\"\npenguins = pd.read_csv(url)\ndf = pd.DataFrame(penguins) #create dataframe\ndf.head()\n\n\n\n\n\n\n\n\nstudyName\nSample Number\nSpecies\nRegion\nIsland\nStage\nIndividual ID\nClutch Completion\nDate Egg\nCulmen Length (mm)\nCulmen Depth (mm)\nFlipper Length (mm)\nBody Mass (g)\nSex\nDelta 15 N (o/oo)\nDelta 13 C (o/oo)\nComments\n\n\n\n\n0\nPAL0708\n1\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN1A1\nYes\n11/11/07\n39.1\n18.7\n181.0\n3750.0\nMALE\nNaN\nNaN\nNot enough blood for isotopes.\n\n\n1\nPAL0708\n2\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN1A2\nYes\n11/11/07\n39.5\n17.4\n186.0\n3800.0\nFEMALE\n8.94956\n-24.69454\nNaN\n\n\n2\nPAL0708\n3\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN2A1\nYes\n11/16/07\n40.3\n18.0\n195.0\n3250.0\nFEMALE\n8.36821\n-25.33302\nNaN\n\n\n3\nPAL0708\n4\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN2A2\nYes\n11/16/07\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nAdult not sampled.\n\n\n4\nPAL0708\n5\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN3A1\nYes\n11/16/07\n36.7\n19.3\n193.0\n3450.0\nFEMALE\n8.76651\n-25.32426\nNaN\n\n\n\n\n\n\n\n\nCleaning our Data\nWe want to see if the size of the penguins differs by species in any way, and visualize this difference. First, we should clean our data.\nWe only need the Penguin’s species, sex, culmen length, and body mass for our purposes, so we will create a new dataframe with just these columns. Also, we should get rid of NaN values. Also, lets shorten the species names.\n\ncolumns = [\"Species\", \"Flipper Length (mm)\", \"Body Mass (g)\", \"Sex\"]\ndf = df[columns] #create new df\ndf = df.dropna() #drop NANs\ndf[\"Species\"] = df[\"Species\"].str[:5] #shortens to first five letters of the Species name\ndf.head()\n\n\n\n\n\n\n\n\nSpecies\nFlipper Length (mm)\nBody Mass (g)\nSex\n\n\n\n\n0\nAdeli\n181.0\n3750.0\nMALE\n\n\n1\nAdeli\n186.0\n3800.0\nFEMALE\n\n\n2\nAdeli\n195.0\n3250.0\nFEMALE\n\n\n4\nAdeli\n193.0\n3450.0\nFEMALE\n\n\n5\nAdeli\n190.0\n3650.0\nMALE\n\n\n\n\n\n\n\n\n\nPlotting\nFinally, we can begin plotting our data. We want to seperate our data into teo plots by sex. Also, we want to color the different species. To do this we, define the function plot_species that takes the axis of our subplot and the sex of the penguins we want to plot.\n\nfig, axes = plt.subplots(1,2)\n\ndef plot_species(axis,sex):\n    df.groupby(\"Species\").apply(\n        lambda group: axes[axis].scatter(\n            group[group[\"Sex\"] == sex][\"Flipper Length (mm)\"],\n            group[group[\"Sex\"] == sex][\"Body Mass (g)\"],\n            label=group[\"Species\"].iloc[0]\n            )\n    )\n    axes[axis].legend()\n    axes[axis].set_xlabel(\"Flipper Length (mm)\")\n    axes[axis].set_ylabel(\"Body Mass (g)\")\n    axes[axis].set_title(f\"Species: {sex}\")\n    \nplot_species(0,\"MALE\")\nplot_species(1,\"FEMALE\")\n\n/var/folders/bk/2x4cd_5s4sbfc4zg448d5cbh0000gn/T/ipykernel_64925/351063246.py:4: DeprecationWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n  df.groupby(\"Species\").apply(\n/var/folders/bk/2x4cd_5s4sbfc4zg448d5cbh0000gn/T/ipykernel_64925/351063246.py:4: DeprecationWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n  df.groupby(\"Species\").apply(\n\n\n\n\n\n\n\n\n\n\n\nInterpretation\nNow that we have visualized are data, we can interpret its structure. It is clear that the Gento penguins are almost always bigger than the other penguins both in weight and flipper length."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "myblog",
    "section": "",
    "text": "Creating posts\n\n\n\n\n\n\nweek 3\n\n\nexample\n\n\n\n\n\n\n\n\n\nJan 26, 2025\n\n\nRoger Kozlyuk\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 26, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to my Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJan 23, 2025\n\n\nRoger Kozlyuk\n\n\n\n\n\n\nNo matching items"
  }
]